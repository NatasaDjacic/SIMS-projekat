<Page x:Class="ZdravoKlinika.UI.ManagerUI.View.SeparateAppointments"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:val="clr-namespace:ZdravoKlinika.UI.ManagerUI.View"
      mc:Ignorable="d" 
      d:DesignHeight="768" d:DesignWidth="1024"
      Title="SeparateAppointments" Style="{StaticResource PageStyle}">

    <DockPanel Margin="10">

        <Grid DockPanel.Dock="Top" Margin="0" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

        </Grid>


        <Grid Margin="0 15" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="275*"/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <StackPanel Grid.Column="1" Grid.Row="3" Grid.RowSpan="5" HorizontalAlignment="Left" Width="auto" Grid.ColumnSpan="2" >
                <Grid Margin="50 0 50 0" Style="{StaticResource GridStyle}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" HorizontalAlignment="Center" FontWeight="Bold" FontSize="17"   Margin="0,10,0,10" Content="{DynamicResource StrRoomList}"></Label>
                    <DataGrid Grid.Row="2" Background="AliceBlue" Grid.Column="0" ItemsSource="{Binding Path=RoomsCollection, UpdateSourceTrigger=PropertyChanged}"  FontSize="13" FontWeight="SemiBold"  AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True" Margin="30 0 30 0" MinWidth="350" >
                        <DataGrid.Columns>
                            <DataGridTextColumn Width="auto"  Binding="{Binding roomId}" >
                                <DataGridTextColumn.Header>
                                    <TextBlock Text="{DynamicResource StrId}"/>
                                </DataGridTextColumn.Header>
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellStyle}"/>
                                </DataGridTextColumn.CellStyle>
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="Padding" Value="5 0" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Width="auto"  Binding="{Binding name}" >
                                <DataGridTextColumn.Header>
                                    <TextBlock Text="{DynamicResource StrName}"/>
                                </DataGridTextColumn.Header>
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellStyle}"/>
                                </DataGridTextColumn.CellStyle>
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="Padding" Value="5 0" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Width="*"  Binding="{Binding description}" >
                                <DataGridTextColumn.Header>
                                    <TextBlock Text="{DynamicResource StrDesc}"/>
                                </DataGridTextColumn.Header>
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellStyle}"/>
                                </DataGridTextColumn.CellStyle>
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="Padding" Value="5 0" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Binding="{Binding type}" Width="*" MaxWidth="200">
                                <DataGridTextColumn.Header>
                                    <TextBlock Text="{DynamicResource StrType}"/>
                                </DataGridTextColumn.Header>
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellStyle}"/>
                                </DataGridTextColumn.CellStyle>
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="Padding" Value="5 0" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </StackPanel>
            <StackPanel Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" Width="auto" Margin="10" HorizontalAlignment="Center">
                <Grid Style="{StaticResource GridStyle}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="{DynamicResource StrSeparating}" FontWeight="Bold" Grid.Row="0" Grid.ColumnSpan="7" HorizontalAlignment="Center" FontSize="17"  Margin="0,10,0,10"></Label>
                    <Label Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" Content="{DynamicResource StrTermins}" FontWeight="Bold"></Label>
                    <ListView Grid.Row="1" Grid.RowSpan="5" Grid.Column="0" Width="auto" Margin="30" HorizontalAlignment="Center" ItemsSource="{Binding DateCollection}" SelectedItem="{Binding SelectedRenovation}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding startTime}"/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Label Content="{DynamicResource StrRoom1}" HorizontalAlignment="Center" FontWeight="Bold" Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2"></Label>
                    <Label Content="{DynamicResource StrId*}" Grid.Row="2" Grid.Column="2"></Label>
                    <TextBox x:Name="id1" Grid.Row="2" Width="90" Height="25" Grid.Column="3">
                        <TextBox.Text>
                            <Binding Path="NewRoomId" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <val:EmptyStringValidationRule ValidationStep="RawProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                                    <TextBlock Margin="30 0 0 0" FontSize="13" VerticalAlignment="Center"  Grid.Column="1" Grid.Row="0" Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                </Grid>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>
                    <Label Content="{DynamicResource StrName*}" Grid.Row="3" Grid.Column="2"></Label>
                    <TextBox x:Name="name1" Grid.Row="3" Width="90" Height="25" Grid.Column="3">
                        <TextBox.Text>
                            <Binding Path="NewRoomName" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <val:EmptyStringValidationRule ValidationStep="RawProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                                    <TextBlock Margin="30 0 0 0" FontSize="13" VerticalAlignment="Center"  Grid.Column="1" Grid.Row="0" Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                </Grid>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>
                    <Label Content="{DynamicResource StrType*}" Grid.Row="4" Grid.Column="2"></Label>
                    <TextBox x:Name="type1" Grid.Row="4" Width="90" Height="25" Grid.Column="3">
                        <TextBox.Text>
                            <Binding Path="NewRoomType" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <val:EmptyStringValidationRule ValidationStep="RawProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                                    <TextBlock Margin="30 0 0 0" FontSize="13" VerticalAlignment="Center"  Grid.Column="1" Grid.Row="0" Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                </Grid>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>
                    <Label Content="{DynamicResource StrDesc}" Grid.Row="5" Grid.Column="2"></Label>
                    <TextBox Grid.Row="5" Width="90" Height="25" Text="{Binding NewRoomDescription}" Grid.Column="3"></TextBox>

                    <Label Content="{DynamicResource StrRoom2}" HorizontalAlignment="Center" FontWeight="Bold" Grid.Row="1" Grid.Column="4" Grid.ColumnSpan="2"></Label>
                    <Label Content="{DynamicResource StrId*}" Grid.Row="2" Grid.Column="4"></Label>
                    <TextBox x:Name="id2" Grid.Row="2" Width="90" Height="25" Grid.Column="5">
                        <TextBox.Text>
                            <Binding Path="NewRoomId2" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <val:EmptyStringValidationRule ValidationStep="RawProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                                    <TextBlock Margin="30 0 0 0" FontSize="13" VerticalAlignment="Center"  Grid.Column="1" Grid.Row="0" Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                </Grid>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>
                    <Label Content="{DynamicResource StrName*}" Grid.Row="3" Grid.Column="4"></Label>
                    <TextBox x:Name="name2" Grid.Row="3" Width="90" Height="25" Grid.Column="5">
                        <TextBox.Text>
                            <Binding Path="NewRoomName2" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <val:EmptyStringValidationRule ValidationStep="RawProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                                    <TextBlock Margin="30 0 0 0" FontSize="13" VerticalAlignment="Center"  Grid.Column="1" Grid.Row="0" Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                </Grid>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>
                    <Label Content="{DynamicResource StrType*}" Grid.Row="4" Grid.Column="4"></Label>
                    <TextBox x:Name="type2" Grid.Row="4" Width="90" Height="25"  Grid.Column="5">
                        <TextBox.Text>
                            <Binding Path="NewRoomType2" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <val:EmptyStringValidationRule ValidationStep="RawProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                                    <TextBlock Margin="30 0 0 0" FontSize="13" VerticalAlignment="Center"  Grid.Column="1" Grid.Row="0" Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                </Grid>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>
                    <Label Content="{DynamicResource StrDesc}" Grid.Row="5" Grid.Column="4"></Label>
                    <TextBox Grid.Row="5" Width="90" Height="25" Text="{Binding NewRoomDescription2}" Grid.Column="5"></TextBox>
                    <Button Content="{DynamicResource StrSchedule}" VerticalAlignment="Top" FontWeight="SemiBold" Background="Green" Grid.Row="6" Grid.Column="5" Click="Button_Click_Renovation" Height="25" Width="90">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=name1}" Value="False"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=name2}" Value="False"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=id1}" Value="False"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=id2}" Value="False"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=type1}" Value="False"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=type2}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>

            </StackPanel>
        </Grid>
    </DockPanel>
</Page>
